name: AYH Service Request Hub - CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
    paths:
      - 'solutions/**'
      - 'powerapps/**'
      - 'flows/**'
      - 'dataverse/**'
  pull_request:
    branches: [ main ]

env:
  SOLUTION_NAME: AYHServiceRequestHub

jobs:
  validate-solution:
    runs-on: windows-latest
    name: Validate Solution Changes

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Power Platform Build Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Display repository structure
      run: |
        Write-Host "üè• AYH Service Request Hub - Repository Structure" -ForegroundColor Green
        Get-ChildItem -Recurse | Select-Object Name, FullName | Format-Table -AutoSize

    - name: Validate solution files
      run: |
        Write-Host "üîç Validating solution structure..." -ForegroundColor Blue
        if (Test-Path "dataverse/schema") {
          Write-Host "‚úÖ Dataverse schema found" -ForegroundColor Green
        } else {
          Write-Host "‚ö†Ô∏è No Dataverse schema found yet" -ForegroundColor Yellow
        }

        if (Test-Path "powerapps/canvas") {
          Write-Host "‚úÖ Canvas apps folder found" -ForegroundColor Green
        } else {
          Write-Host "‚ö†Ô∏è No Canvas apps found yet" -ForegroundColor Yellow
        }

        if (Test-Path "flows/workflows") {
          Write-Host "‚úÖ Power Automate flows found" -ForegroundColor Green
        } else {
          Write-Host "‚ö†Ô∏è No Power Automate flows found yet" -ForegroundColor Yellow
        }

        Write-Host "üöÄ ALM pipeline validation completed" -ForegroundColor Green

  build-when-solution-exists:
    runs-on: windows-latest
    name: Build Solution (When Available)
    needs: validate-solution
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[build-solution]')

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Power Platform Build Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Authenticate to Development Environment
      if: ${{ secrets.POWER_PLATFORM_ENVIRONMENT_URL_DEV != '' }}
      uses: microsoft/powerplatform-actions/auth@v1
      with:
        environment-url: ${{ secrets.POWER_PLATFORM_ENVIRONMENT_URL_DEV }}
        app-id: ${{ secrets.POWER_PLATFORM_APP_ID }}
        client-secret: ${{ secrets.POWER_PLATFORM_CLIENT_SECRET }}
        tenant-id: ${{ secrets.POWER_PLATFORM_TENANT_ID }}

    - name: Export Solution (if exists)
      if: ${{ secrets.POWER_PLATFORM_ENVIRONMENT_URL_DEV != '' }}
      continue-on-error: true
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        solution-name: ${{ env.SOLUTION_NAME }}
        solution-output-file: solutions/${{ env.SOLUTION_NAME }}.zip
        managed: false

    - name: Upload solution artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: solution-package
        path: solutions/
        retention-days: 30